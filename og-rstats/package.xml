<project name="OG-RStats">

  <import file="${common.dir}/version.xml" />
  <import file="${common.dir}/advanced-installer.xml" />

  <target name="generate-sources">
    <!-- Copy files from dependencies into build-tree -->
    <mkdir dir="${localTarget}/run" />
    <move file="${localTarget}/og-language-client.jar" tofile="${localTarget}/run/client.jar" />
    <mkdir dir="${localTarget}/generated-sources/main/cpp" />
    <copy todir="${localTarget}/generated-sources/main/cpp">
      <fileset dir="${localTarget}/dependency/include/connector/cpp">
        <include name="com_opengamma_language_*.h" />
      </fileset>
      <fileset dir="${localSource}/main/cpp">
        <include name="stdafx.h" />
      </fileset>
    </copy>
    <!-- Fudge proto files -->
    <java classname="org.fudgemsg.proto.CommandLine" classpath="${maven.classpath}" fork="true">
      <arg value="-d${localTarget}/generated-sources/main/cpp" />
      <arg value="-s${localSource}/main/java" />
      <arg value="-lC" />
      <arg value="-Xinclude=stdafx.h" />
      <arg value="-p${localTarget}/run/client.jar" />
      <arg value="com/opengamma/rstats/msg/DataInfo.proto" />
      <arg value="com/opengamma/rstats/msg/FunctionResult.proto" />
      <arg value="com/opengamma/rstats/msg/LiveDataResult.proto" />
      <arg value="com/opengamma/rstats/msg/ProcedureResult.proto" />
    </java>
    <java classname="org.fudgemsg.proto.CommandLine" classpath="${maven.classpath}" fork="true">
      <arg value="-d${localSource}/main/java" />
      <arg value="-s${localSource}/main/java" />
      <arg value="-lJava" />
      <arg value="-p${localTarget}/run/client.jar" />
      <arg value="-Xhash" />
      <arg value="-Xequals" />
      <arg value="-Xstring" />
      <arg value="-XfileFooter=///CLOVER:ON - CSON" />
      <arg value="-XfileHeader=///CLOVER:OFF - CSOFF" />
      <arg value="com/opengamma/rstats/msg/DataInfo.proto" />
      <arg value="com/opengamma/rstats/msg/FunctionResult.proto" />
      <arg value="com/opengamma/rstats/msg/LiveDataResult.proto" />
      <arg value="com/opengamma/rstats/msg/ProcedureResult.proto" />
    </java>
  </target>

  <target name="prepare-package" depends="module-version-numbers">
    <!-- Prepare R package source -->
    <exec executable="perl"
          output="${localTarget}/package/OpenGamma/demo/00Index"
          dir="${localSource}/main/R/demo"
          failifexecutionfails="false">
      <arg value="00Index.pl" />
    </exec>
    <mkdir dir="${localTarget}/package/OpenGamma" />
    <copy todir="${localTarget}/package/OpenGamma">
      <fileset dir="${localSource}/main/R">
        <exclude name="demo/00Index.pl" />
      </fileset>
    </copy>
    <tstamp>
      <format property="now.yyyy.mm.dd" pattern="yyyy-MM-dd" />
    </tstamp>
    <copy file="${root.dir}/LICENSE.txt" tofile="${localTarget}/package/OpenGamma/LICENSE" />
    <!-- TODO: Generate the DESCRIPTION from C so that it gets the same header files that drive DllInfo -->
    <echo file="${localTarget}/package/OpenGamma/DESCRIPTION">Package: OpenGamma
Version: ${module.version}
Date: ${now.yyyy.mm.dd}
Title: OpenGamma for R
Author: OpenGamma Ltd
Maintainer: OpenGamma Ltd &lt;info@opengamma.com&gt;
Depends: R (>= 2.11.1), methods, utils
Enhances: OG, xts
Description: Connects to the OpenGamma platform for access to risk analytics from running views, market data feeds, the time series database, security and portfolio data
License: file LICENSE
URL: http://www.opengamma.com/R, http://www.github.com/OpenGamma/OG-PlatformNative/og-rstats
BugReports: http://jira.opengamma.com/browse/RSTAT
LazyLoad: true</echo>
    <copy todir="${localTarget}/package/OpenGamma/src">
      <fileset dir="${localSource}/main/cpp">
        <include name="*.cpp" />
        <include name="*.h" />
      </fileset>
      <mapper type="glob" from="*" to="Client_*" />
    </copy>
    <copy todir="${localTarget}/package/OpenGamma/src">
      <fileset dir="${localTarget}/generated-sources/main/cpp">
        <include name="com_opengamma_*" />
      </fileset>
    </copy>
    <copy file="${localTarget}/generated-sources/version.h" todir="${localTarget}/package/OpenGamma/src" />
    <mkdir dir="${localTarget}/run/ext" />
    <copy file="${localSource}/main/config/R.xml" todir="${localTarget}/run/ext" />
    <copy file="${localTarget}/dependency/config/log4cxx.service.properties" todir="${localTarget}/run" />
    <copy file="${localSource}/main/config/log4cxx.connector.properties" todir="${localTarget}/run" />
    <copy file="${localTarget}/dependency/config/logback.xml" todir="${localTarget}/run" />
    <echoproperties destfile="${localTarget}/run/OpenGamma.properties" prefix="opengamma.annotationCachePath" />
    <echo file="${localTarget}/run/OpenGamma.properties" append="true">opengamma.configuration.url=${site.opengamma.test-server.url}
opengamma.configuration.failOnInvalid=true
opengamma.configuration.failOnMissing=false
</echo>
    <copy file="${localTarget}/dependency/config/0og-language.xml" todir="${localTarget}/run/ext" />
  </target>

  <target name="package" depends="source-package,binary-package" />
  <target name="source-package">
    <tar destfile="${localTarget}/OpenGamma.tgz" basedir="${localTarget}/package" compression="gzip" />
    <copy file="${localTarget}/${project.artifactId}-${project.version}.jar" tofile="${localTarget}/run/jar/${project.artifactId}.jar" />
  </target>
  <target name="binary-package" if="profile.windows.r" depends="r-configuration">
    <mkdir dir="${localTarget}/package-build" />
    <copy todir="${localTarget}/package-build">
      <fileset dir="${localTarget}/package" />
    </copy>
    <exec executable="${cmd.r}" failonerror="true">
      <arg value="CMD" />
      <arg value="build" />
      <arg value="--binary" />
      <arg value="${localTarget}/package-build/OpenGamma" />
      <env key="CONFIGURATION" value="${r.configuration}" />
      <env key="OG_RSTATS_TARGET" value="${localTarget}" />
    </exec>
    <move tofile="${localTarget}/OpenGamma.zip">
      <fileset dir=".">
        <include name="OpenGamma_*.zip" />
      </fileset>
    </move>
    <antcall target="windows-installer" />
  </target>
  <target name="windows-installer" if="profile.windows.ai" depends="msi-version-number">
    <ai-set-version file="${localSource}${file.separator}main${file.separator}ai${file.separator}R.aip" version="${msi.version.number}" />
    <ai-build dir="${localSource}${file.separator}main${file.separator}ai${file.separator}" file="R.aip" />
  </target>

  <target name="integration-test" if="profile.r" depends="r-configuration">
    <mkdir dir="${localTarget}/Rcheck" />
    <exec executable="${cmd.r}" failonerror="true">
      <arg value="CMD" />
      <arg value="check" />
      <arg line="${r.check.platform.args}-o" />
      <arg value="${localTarget}${file.separator}Rcheck" />
      <arg value="${localTarget}${file.separator}OpenGamma.tgz" />
      <env key="CONFIGURATION" value="${r.configuration}" />
      <env key="OG_RSTATS_TARGET" value="${localTarget}" />
    </exec>
  </target>

  <target name="r-configuration" depends="r-configuration-debug,r-configuration-release,r-configuration-windows,r-configuration-nix" />
  <target name="r-configuration-debug" if="profile.debug.r">
    <property name="r.configuration" value="Debug" />
  </target>
  <target name="r-configuration-release" if="profile.release.r">
    <property name="r.configuration" value="Release" />
  </target>
  <target name="r-configuration-windows" if="profile.windows.r">
    <property name="r.check.platform.args" value="--no-manual " />
  </target>
  <target name="r-configuration-nix" if="profile.nix.r">
    <property name="r.check.platform.args" value=" " />
  </target>

</project>
